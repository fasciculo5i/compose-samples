/*
 * Copyright 2019 Google, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

Configuration kotlinPluginConfiguration = configurations.create("kotlinPlugin")
tasks.withType(KotlinCompile).configureEach { compile ->
    compile.dependsOn(kotlinPluginConfiguration)
    compile.doFirst {
        kotlinOptions {
            useIR = true
            freeCompilerArgs = [
                    "-Xplugin=${kotlinPluginConfiguration.files.first()}"
            ]
        }
    }
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.example.jetnews"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

configurations {
    ktlint
}

dependencies {
    // Needed for Compose Kotlin compiler
    kotlinPlugin "androidx.compose:compose-compiler:1.0.0-SNAPSHOT"

    // Actual dependencies of the application
    implementation ("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.3.50-compose-20190806")

    implementation ('androidx.compose:compose-runtime:1.0.0-SNAPSHOT')
    implementation ('androidx.ui:ui-core:1.0.0-SNAPSHOT')
    implementation ('androidx.ui:ui-framework:1.0.0-SNAPSHOT')
    implementation ('androidx.ui:ui-layout:1.0.0-SNAPSHOT')
    implementation ('androidx.ui:ui-material:1.0.0-SNAPSHOT')
    implementation ('androidx.ui:ui-android-view:1.0.0-SNAPSHOT')
    implementation ('androidx.ui:ui-platform:1.0.0-SNAPSHOT')
    implementation ('androidx.lifecycle:lifecycle-viewmodel-ktx:2.0.0')
    implementation ('androidx.appcompat:appcompat:1.1.0-beta01')
    implementation ('androidx.activity:activity-ktx:1.0.0-beta01')
    implementation ('androidx.lifecycle:lifecycle-extensions:2.0.0')

    implementation "androidx.core:core-ktx:1.0.2"
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.1.0-beta01"
    implementation "androidx.lifecycle:lifecycle-extensions:2.1.0-beta01"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0-beta01"
    implementation "com.google.code.gson:gson:2.8.5"

    implementation fileTree(dir: 'libs', include: ['*.aar'])
    implementation "androidx.ui:ui-tooling:+"

    ktlint "com.pinterest:ktlint:0.34.2"
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt", "--editorconfig", ".editorconfig"

}

check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt", "--editorconfig", ".editorconfig"
}