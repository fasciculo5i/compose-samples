/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import com.example.jetsnack.buildsrc.Libs
import com.example.jetsnack.buildsrc.Versions

buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath Libs.androidGradlePlugin
        classpath Libs.Kotlin.gradlePlugin
    }
}

plugins {
    id 'com.diffplug.spotless' version '5.8.2'
}

subprojects {
    repositories {
        maven { url 'https://storage.googleapis.com/temp-androidx-snapshot.appspot.com/7123292/' }
        google()
        jcenter()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            jvmTarget = '1.8'
            allWarningsAsErrors = true
            // Opt-in to experimental compose APIs
            freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
            // Enable experimental coroutines APIs, including collectAsState()
            freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
        }
    }

    // FIXME: Only needed for Compose 1.0.0-alpha12 snapshots
    configurations.configureEach {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'androidx.lifecycle' &&
                    details.requested.name != 'lifecycle-viewmodel-compose') {
                details.useVersion('2.3.0-rc01')
            }
            if (details.requested.group == 'androidx.savedstate') {
                details.useVersion('1.1.0-rc01')
            }
        }
    }

    apply plugin: 'com.diffplug.spotless'
    spotless {
        kotlin {
            target '**/*.kt'
            targetExclude("$buildDir/**/*.kt")
            targetExclude('bin/**/*.kt')

            ktlint(Versions.ktlint).userData([android: "true"])
            licenseHeaderFile rootProject.file('spotless/copyright.kt')
        }
    }
}
